* Functions for Switching the stylesheets
** Function =alternate_stylesheets()=
   This functions creates two link tags, for switching the style sheets.

#+BEGIN_SRC js :tangle ../../code/webpage_transformation/switch_css.js :eval no
(function alternate_stylesheets(){
	var i= 0;
	var css_links = 3;
	var link_rel =['stylesheet', 'alternate stylesheet', 'alternate stylesheet'] 
	var css_themes =['https://rawgit.com/sadhanareddy/css-changer-tool/master/switch1.css',
	'https://rawgit.com/sadhanareddy/css-changer-tool/master/switch2.css',
	'https://rawgit.com/sadhanareddy/css-changer-tool/master/switch3.css'];
	var link_title =['switch1', 'switch2', 'switch3'];

	for(i=0; i<css_links; i++){
	    link = document.createElement('link');
	    link.rel  = link_rel[i];
	    link.type = 'text/css';
	    link.href = css_themes[i];
	    link.title= link_title[i];
	    head  = document.getElementsByTagName('head')[0];
	    head.appendChild(link);
	}

}());
#+end_src

** Function =switchcss_container()=
   This function creates a continer div which lets the users interact
   with app.  When switchcssContainer is called, it injects CSS
   stylesheet into <head> element of website to stylize the container
   and =<div id=css-container>...</div>= whose inner HTML is a list of
   buttons inside body.

#+BEGIN_SRC js :tangle ../../code/webpage_transformation/switch_css.js :eval no
(function switchcss_container(){
    //appending a CSS stylesheet to head of webpage
    var link = document.createElement('link');
    // using rawgit.com MaxCDN.. files directly linked to git repo 'annoletjs/master'
    link.rel = "stylesheet";
    link.type = "text/css";
    link.href = "https://rawgit.com/sadhanareddy/css-changer-tool/master/annolet.css"; //random version number removed bcoz some browser take it as text file and not as CSS.
    document.getElementsByTagName('head')[0].appendChild(link);
    // appending a div to body of webpage
    var body = document.getElementsByTagName('body')[0];
    var switchcss_container = document.createElement('div');
    switchcss_container.id = 'switchcss-container';
    body.appendChild(switchcss_container);

    //appending buttons into the div inner HTML
	var i= 0;
	var buttons = 3;
	var text_node = ['Theme_1', 'Theme_2', 'Theme_3'];
	var button_id = ['theme_1', 'theme_2','theme_3'];
	for(i=0; i<buttons; i++){
		button_tag = document.createElement("BUTTON");
		text = document.createTextNode(text_node[i]);
		button_tag.id = button_id[i];
		button_tag.appendChild(text);
		document.getElementById('switchcss-container').appendChild(button_tag);
	}
}());
#+end_src

** Function =add_clickevents()=
   This function adds click events to the elements.

#+BEGIN_SRC js :tangle ../../code/webpage_transformation/switch_css.js :eval no
(function add_clickevents(){
	document.getElementById('theme_1').addEventListener('click', function() {
		switch_style('switch1')
	}, false);
	document.getElementById('theme_2').addEventListener('click', function() {
		switch_style('switch2')
	}, false);
	document.getElementById('theme_3').addEventListener('click', function() {
		switch_style('switch3')
	}, false);
}());
#+end_src

** Function =switch_style()=
#+BEGIN_SRC js :tangle ../../code/webpage_transformation/switch_css.js :eval no
function switch_style (css_title)
{	
	alert(css_title);
  	var i;
  	var linktag = document.getElementsByTagName("link");

  	for (i = 0; i < linktag.length; i++ ) {
		if ((linktag[i].rel.indexOf( "stylesheet" ) != -1) &&linktag[i].title) {
		  	linktag[i].disabled = true ;
		  	if (linktag[i].title == css_title) {
		    	linktag[i].disabled = false ;
		  	}
		}
	//set_cookie( style_cookie_name, css_title, style_cookie_duration, style_domain );
  	}
}
#+end_src


* Functions for Translating the text of a web page
** Function =switchcss_container()=
  This function creates a continer div which lets the users interact
  with app. When switchcssContainer is called, it injects CSS
  stylesheet into <head> element of website to stylize the container
  and =<div id=css-container>...</div>= whose inner HTML is a list of
  options inside body. 

#+BEGIN_SRC js :tangle ../../code/webpage_transformation/lang_translation.js :eval no
(function switchcss_container(){
    //appending a CSS stylesheet to head of webpage
    var link = document.createElement('link');
    // using rawgit.com MaxCDN.. files directly linked to git repo 'annoletjs/master'
    link.rel = "stylesheet";
    link.type = "text/css";
    link.href = "https://rawgit.com/sadhanareddy/css-changer-tool/master/annolet.css"; //random version number removed bcoz some browser take it as text file and not as CSS.
    document.getElementsByTagName('head')[0].appendChild(link);
    // appending a div to body of webpage
    var body = document.getElementsByTagName('body')[0];
    var switchcss_container = document.createElement('div');
    switchcss_container.id = 'switchcss-container';
    body.appendChild(switchcss_container);
    create_div()
    Translate_button()
    select_list()
    create_textArea()
}());
#+end_src

** Function =googleTranslateElementInit()=
   
 
#+BEGIN_SRC js :tangle ../../code/webpage_transformation/lang_translation.js :eval no
function googleTranslateElementInit() {
   new google.translate.TranslateElement({pageLanguage: 'en'}, 'google_translate_element');
}
#+end_src

** Function =create_div()=
This function is called to create a =div=

#+BEGIN_SRC js :tangle ../../code/webpage_transformation/lang_translation.js :eval no
function create_div(){
     div = document.createElement('div');
     div.id = 'google_translate_element';
     document.getElementById('switchcss-container').appendChild(div);
}
#+end_src

** Function =Translate_button()=
This function is called to create a =button=

#+BEGIN_SRC js :tangle ../../code/webpage_transformation/lang_translation.js :eval no
function Translate_button(){
     button = document.createElement("BUTTON");
     var text = document.createTextNode("Translate");
     button.id = 'lang_translate';
     button.appendChild(text);
     document.getElementById('switchcss-container').appendChild(button);
}
#+end_src

** Function =select_list()=
This function is used to create a =selection list= 

#+BEGIN_SRC js :tangle ../../code/webpage_transformation/lang_translation.js :eval no
function select_list(){
      //Create array of options to be added
      var array = ["telugu","hindi", "malayalam"];
      var options = ["te", "hi", "ml"];
      //Create and append select list
      var selectList = document.createElement("select");
      selectList.setAttribute("id", "lang");
      selectList.setAttribute("name", "to");
      document.getElementById('switchcss-container').appendChild(selectList);
      //Create and append the options
      for (var i = 0; i < array.length; i++) {
          var option = document.createElement("option");
          option.setAttribute("value", options[i]);
          option.text = array[i];
          selectList.appendChild(option);
      }
}
#+end_src

** Function =create_textArea()=
This function is used to create a =Text area=

#+BEGIN_SRC js :tangle ../../code/webpage_transformation/lang_translation.js :eval no
function create_textArea() {
    var output = document.createElement("TEXTAREA");
    output.id="textarea";
    var t = document.createTextNode("");
    output.appendChild(t);
    document.getElementById('switchcss-container').appendChild(output);
}
#+end_src

** Function =languageTrans_API()=
This function is called to translate the language of the selected text on the web page.

#+BEGIN_SRC js :tangle ../../code/webpage_transformation/lang_translation.js :eval no
(function languageTrans_API(){
  var url = "https://translate.yandex.net/api/v1.5/tr.json/translate",
  keyAPI = "trnsl.1.1.20170315T015859Z.3e04bd9bd31f6f00.99aa35ddf89167a86f5a892014edf632e9cef14f";

  document.querySelector('#lang_translate').addEventListener('click', function() {
    var xhr = new XMLHttpRequest();
    // textAPI = document.querySelector('#source').value,
    var textAPI = "";
    if (window.getSelection) {
        textAPI = window.getSelection().toString();
    } 
    else if (document.selection && document.selection.type != "Control") {
        textAPI = document.selection.createRange().text;
    }
    alert(textAPI);
    langAPI = document.querySelector('#lang').value
    alert(langAPI)
    data = "key="+keyAPI+"&text="+textAPI+"&lang="+langAPI;
    alert(data)

    xhr.open("POST",url,true);
    xhr.setRequestHeader("Content-type","application/x-www-form-urlencoded");
    xhr.send(data);
    xhr.onreadystatechange = function() {
        if (this.readyState==4 && this.status==200) {
            var res = this.responseText;
            alert(res);
            var json = JSON.parse(res);
            if(json.code == 200) {
                 document.querySelector('#textarea').innerHTML = json.text[0];
                 alert("selected");
            }
            else {
                alert("select text");
            }
        }
    }
}, false);

}());
#+end_src


* Function for disabling the css
** Function =disable_css()= 
This function fetches all the css link tags in the document and makes it disabled.

#+BEGIN_SRC js :tangle ../../code/webpage_transformation/disable_css.js :eval no
function disable_css(){
   for ( i=0; i<document.styleSheets.length; i++) {
      document.styleSheets.item(i).disabled=true;
   }
}
#+end_src


* Function for hiding the elements.
#+BEGIN_SRC js :tangle ../../code/webpage_transformation/hide_elements.js :eval no
$("body").click(function(event){
      console.log(event.target);
      targetElem= event.target;
      targetElem.style.visibility="hidden";
});
#+end_src


* Function for text translation to Phonetics
** Function =switchcss_container()=
This function creates a continer div which lets the users interact
with app. When switchcssContainer is called, it injects CSS stylesheet
into <head> element of website to stylize the container and =<div
id=css-container>...</div>= whose inner HTML is a list of options
inside body.

#+BEGIN_SRC js :tangle ../../code/webpage_transformation/phonetics.js :eval no
(function switchcss_container(){
  //appending a CSS stylesheet to head of webpage
    var link = document.createElement('link');
    // using rawgit.com MaxCDN.. files directly linked to git repo 'annoletjs/master'
    link.rel = "stylesheet";
    link.type = "text/css";
    link.href = "https://rawgit.com/sadhanareddy/css-changer-tool/master/annolet.css"; //random version number removed bcoz some browser take it as text file and not as CSS.
    document.getElementsByTagName('head')[0].appendChild(link);

    //appending a div to body of webpage
    var body = document.getElementsByTagName('body')[0];
    var switchcss_container = document.createElement('div');
    switchcss_container.id = 'switchcss-container';
    body.appendChild(switchcss_container);
    Translate_button()
    create_textArea()
  
}());
#+end_src

** Function =Translate_button()=
This function is called to create a button.

#+BEGIN_SRC js :tangle ../../code/webpage_transformation/phonetics.js :eval no
function Translate_button(){
    button = document.createElement("BUTTON");
    var text = document.createTextNode("Get Phonetic");
    button.id = 'phonetic';
    button.appendChild(text);
    document.getElementById('switchcss-container').appendChild(button);
}
#+end_src

** Function =create_textArea()=
This function is used to create a =Text area=

#+BEGIN_SRC js :tangle ../../code/webpage_transformation/phonetics.js :eval no
function create_textArea() {
    var output = document.createElement("TEXTAREA");
    output.id="textarea";
    var t = document.createTextNode("");
    output.appendChild(t);
    document.getElementById('switchcss-container').appendChild(output);
}
#+end_src

** Function =phoneticsTrans_API()=
This function is called to translate the selected text on the web page to phonetics.

#+BEGIN_SRC js :tangle ../../code/webpage_transformation/phonetics.js :eval no
function phoneticsTrans_API(){
// var url = "http://www.phonemicchart.com/transcribe/";
var url = "//localhost:5000/phonetic-trans"
document.querySelector('#phonetic').addEventListener('click', function() {
    var xhr = new XMLHttpRequest();
    if (window.getSelection) 
    {
        textAPI = window.getSelection().toString();
    } 
    else if (document.selection && document.selection.type != "Control") {
        textAPI = document.selection.createRange().text;
    }
    alert(textAPI);
    xhr.open("POST",url,true);
    xhr.setRequestHeader("Access-Control-Allow-Origin", "*");
    xhr.setRequestHeader("Content-Type", "application/json; charset=UTF-8");
    xhr.send(JSON.stringify({"sentence":textAPI}));
    xhr.onreadystatechange = function() {
        if (this.readyState==4 && this.status==200) {
            var res = this.responseText;
            alert(res);
            document.querySelector('#textarea').innerHTML = res;
        }
    }
}, false);
}
#+end_src
 


* Functions for modifying the content
** Function =switchcss_container()=
   This function creates a continer div which lets the users interact
   with app.  When switchcssContainer is called, it injects CSS
   stylesheet into <head> element of website to stylize the container
   and =<div id=css-container>...</div>= whose inner HTML is a list of
   buttons inside body.

#+BEGIN_SRC js :tangle ../../code/webpage_transformation/modify_content.js :eval no
(function switchcss_container(){
    //appending a CSS stylesheet to head of webpage
    var link = document.createElement('link');
    // using rawgit.com MaxCDN.. files directly linked to git repo 'annoletjs/master'
    link.rel = "stylesheet";
    link.type = "text/css";
    link.href = "https://rawgit.com/sadhanareddy/css-changer-tool/master/annolet.css"; //random version number removed bcoz some browser take it as text file and not as CSS.
    document.getElementsByTagName('head')[0].appendChild(link);

    //appending a div to body of webpage
    var body = document.getElementsByTagName('body')[0];
    var switchcss_container = document.createElement('div');
    switchcss_container.id = 'switchcss-container';
    body.appendChild(switchcss_container);
    create_div()
    save_button()
    highlight_button()
}());
#+end_src

** Function =disableAllLinks()=
This function is called to disable all the links on a web page.

#+BEGIN_SRC js :tangle ../../code/webpage_transformation/modify_content.js :eval no
(function disableAllLinks(){
    var anchors = document.getElementsByTagName("a");
    for (var i = 0; i < anchors.length; i++) {
        anchors[i].onclick = function() {return(false);};
    }
}());
#+end_src

** Function =setAttr()=
This function is called to set the =attribute= to all the elements on a web page.

#+BEGIN_SRC js :tangle ../../code/webpage_transformation/modify_content.js :eval no
(function setAttr() {
	document.getElementsByTagName('body')[0].setAttribute('contenteditable', true);
	document.getElementsByTagName('body')[0].setAttribute('class', 'edit');
	document.getElementsByTagName('body')[0].setAttribute('title', 'Edit Content');
    // var all = document.getElementsByTagName("*");
    // for (var i=0, max=all.length; i < max; i++) {
 //        all[i].setAttribute("contenteditable", true);
 //        all[i].setAttribute("class", "edit");
    //  all[i].setAttribute("title", "editext");
    // }
}());
#+end_src

** Function =create_div()=
This function is called to set the =attribute= to all the elements on a web page.

#+BEGIN_SRC js :tangle ../../code/webpage_transformation/modify_content.js :eval no
function create_div(){
    div = document.createElement('div');
    var text = document.createTextNode('Edit the text and click to save for next time');
    div.id = 'update';
    div.appendChild(text);
    document.getElementById('switchcss-container').appendChild(div);
}
#+end_src

** Function =saveEdits()=
This function is called to save the modified content in =local storage=.

#+BEGIN_SRC js :tangle ../../code/webpage_transformation/modify_content.js :eval no
function saveEdits() {
	//get the editable element
	var editElem = document.getElementsByClassName("edit");
	//get the edited element content
	var userVersion = editElem.innerHTML;
	//save the content to local storage
	localStorage.userEdits = userVersion;
	//write a confirmation to the user
	document.getElementById("update").innerHTML="Edits saved!";
}
#+end_src

** Function =checkEdits()=
This function is called to find out if the user has previously =saved edits=.

#+BEGIN_SRC js :tangle ../../code/webpage_transformation/modify_content.js :eval no
function checkEdits() {
	//find out if the user has previously saved edits
	if(localStorage.userEdits!=null)
	document.getElementsByClassName("edit").innerHTML = localStorage.userEdits;
}
#+end_src

** Function =save_button()=
This function on click saves the user edits on a web page.

#+BEGIN_SRC js :tangle ../../code/webpage_transformation/modify_content.js :eval no
function save_button(){
    button = document.createElement("BUTTON");
    button.id = "save-edits"
    var text = document.createTextNode("Save Edits");
    button.appendChild(text);
    button.onclick=function(){
     	saveEdits()
    };
    document.getElementById('switchcss-container').appendChild(button);
}
#+end_src

** Function =highlight_button()=
This function is called to create a button.

#+BEGIN_SRC js :tangle ../../code/webpage_transformation/modify_content.js :eval no
function highlight_button(){
    highlight_button = document.createElement("BUTTON");
    highlight_button.id = "highlight";
    var text = document.createTextNode("Highlight Button");
    highlight_button.appendChild(text);
    document.getElementById('switchcss-container').appendChild(highlight_button);
    highlight_button.onclick=function(){
        highlight_content()
    };
}
#+end_src

** Function =highlight_content()=
This function calls the =selectHTML()= function to set the background color to the
text.

#+BEGIN_SRC js :tangle ../../code/webpage_transformation/modify_content.js :eval no
function highlight_content(){
    var mytext = selectHTML();
    $('span').css({"background-color":"yellow"});
}
#+end_src

** Function =selectHTML()=
This function is to highlight the selected text.

#+BEGIN_SRC js :tangle ../../code/webpage_transformation/modify_content.js :eval no
function selectHTML() {
    try 
    {
        if (window.ActiveXObject) {
            var c = document.selection.createRange();
            return c.htmlText;
        }
    
        var nNd = document.createElement("span");
        var w = getSelection().getRangeAt(0);
        w.surroundContents(nNd);
        return nNd.innerHTML;
    } 
    catch (e) 
    {
        if (window.ActiveXObject) {
            return document.selection.createRange();
        } else {
            return getSelection();
        }
    }
}
#+end_src

